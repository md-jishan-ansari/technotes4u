// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(cuid())
  name          String?
  email         String          @unique
  emailVerified DateTime?
  image         String?
  password      String?
  accounts      Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Blog {
  id            String          @id @default(cuid())
  name          String          @unique
  slug          String          @unique
  parentId      String?
  children      Blog[]          @relation("BlogToBlog")
  parent        Blog?           @relation("BlogToBlog", fields: [parentId], references: [id], onDelete: SetNull)
  isBlog        Boolean         @default(false)
  content       String?         // For blog content
  description   String?         // For both blog and Blog descriptions
  isPublished   Boolean         @default(false)
  viewCount     Int             @default(0)

  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}
